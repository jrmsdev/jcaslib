stages:
   - build

variables:
    DEBIAN_FRONTEND: noninteractive
    DEBPKGS: bmake libgdbm-dev xz-utils
    APTARGS: --no-install-recommends
    GCOV_CMD: gcov

before_script:
    - apt-get -qq update && apt-get -qq -y $APTARGS install $DEBPKGS $CC
    - test "true" = "$CHECK_VG" && apt-get -qq -y $APTARGS install valgrind
    - $CC --version
    - ./configure --use-gdbm
    - bmake depend

.script: &build_script
    - bmake -j2
    - LD_LIBRARY_PATH=./build/lib ./build/bin/jcaslib
    - bmake examples
    - bmake dist

.script: &check_script
    - $CHECK_COV || bmake check
    - $CHECK_VG && bmake check-valgrind
    - $CHECK_COV && bmake clean check-coverage
    - true

build_gcc:
    stage: build
    only:
        - master
    image: gcc
    variables:
        CC: gcc
    script: *build_script

build_clang:
    stage: build
    only:
        - master
    image: debian:stable
    variables:
        CC: clang
    script: *build_script

check_clang:
    stage: build
    only:
        - master
    image: debian:stable
    variables:
        CC: clang
        CHECK_VG: "false"
        CHECK_COV: "false"
    script: *check_script

check_valgrind:
    stage: build
    only:
        - master
    image: gcc
    variables:
        CC: gcc
        CHECK_VG: "true"
        CHECK_COV: "false"
    script: *check_script

check_coverage:
    stage: build
    only:
        - master
    image: gcc
    variables:
        CC: gcc
        CHECK_VG: "false"
        CHECK_COV: "true"
    script: *check_script
